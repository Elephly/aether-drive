var errno = {};
errno.ESUCCESS = { code: 0, message: "Operation completed successfully." };
errno.EPERM = { code: 1, message: "Operation not permitted." };
errno.ENOENT = { code: 2, message: "No such file or directory." };
errno.ESRCH = { code: 3, message: "No such process." };
errno.EINTR = { code: 4, message: "Interrupted system call." };
errno.EIO = { code: 5, message: "I/O errno." };
errno.ENXIO = { code: 6, message: "No such device or address." };
errno.E2BIG = { code: 7, message: "Argument list too long." };
errno.ENOEXEC = { code: 8, message: "Exec format errno." };
errno.EBADF = { code: 9, message: "Bad file number." };
errno.ECHILD = { code: 10, message: "No child processes." };
errno.EAGAIN = { code: 11, message: "Try again." };
errno.ENOMEM = { code: 12, message: "Out of memory." };
errno.EACCES = { code: 13, message: "Permission denied." };
errno.EFAULT = { code: 14, message: "Bad address." };
errno.ENOTBLK = { code: 15, message: "Block device required." };
errno.EBUSY = { code: 16, message: "Device or resource busy." };
errno.EEXIST = { code: 17, message: "File exists." };
errno.EXDEV = { code: 18, message: "Cross-device link." };
errno.ENODEV = { code: 19, message: "No such device." };
errno.ENOTDIR = { code: 20, message: "Not a directory." };
errno.EISDIR = { code: 21, message: "Is a directory." };
errno.EINVAL = { code: 22, message: "Invalid argument." };
errno.ENFILE = { code: 23, message: "File table overflow." };
errno.EMFILE = { code: 24, message: "Too many open files." };
errno.ENOTTY = { code: 25, message: "Not a typewriter." };
errno.ETXTBSY = { code: 26, message: "Text file busy." };
errno.EFBIG = { code: 27, message: "File too large." };
errno.ENOSPC = { code: 28, message: "No space left on device." };
errno.ESPIPE = { code: 29, message: "Illegal seek." };
errno.EROFS = { code: 30, message: "Read-only file system." };
errno.EMLINK = { code: 31, message: "Too many links." };
errno.EPIPE = { code: 32, message: "Broken pipe." };
errno.EDOM = { code: 33, message: "Math argument out of domain of func." };
errno.ERANGE = { code: 34, message: "Math result not representable." };
errno.EDEADLK = { code: 35, message: "Resource deadlock would occur." };
errno.ENAMETOOLONG = { code: 36, message: "File name too long." };
errno.ENOLCK = { code: 37, message: "No record locks available." };
errno.ENOSYS = { code: 38, message: "Function not implemented." };
errno.ENOTEMPTY = { code: 39, message: "Directory not empty." };
errno.ELOOP = { code: 40, message: "Too many symbolic links encountered." };
errno.EWOULDBLOCK = { code: 41, message: "Operation would block." };
errno.ENOMSG = { code: 42, message: "No message of desired type." };
errno.EIDRM = { code: 43, message: "Identifier removed." };
errno.ECHRNG = { code: 44, message: "Channel number out of range." };
errno.EL2NSYNC = { code: 45, message: "Level 2 not synchronized." };
errno.EL3HLT = { code: 46, message: "Level 3 halted." };
errno.EL3RST = { code: 47, message: "Level 3 reset." };
errno.ELNRNG = { code: 48, message: "Link number out of range." };
errno.EUNATCH = { code: 49, message: "Protocol driver not attached." };
errno.ENOCSI = { code: 50, message: "No CSI structure available." };
errno.EL2HLT = { code: 51, message: "Level 2 halted." };
errno.EBADE = { code: 52, message: "Invalid exchange." };
errno.EBADR = { code: 53, message: "Invalid request descriptor." };
errno.EXFULL = { code: 54, message: "Exchange full." };
errno.ENOANO = { code: 55, message: "No anode." };
errno.EBADRQC = { code: 56, message: "Invalid request code." };
errno.EBADSLT = { code: 57, message: "Invalid slot." };

errno.EDEADLOCK = errno.EDEADLK;

errno.EBFONT = { code: 59, message: "Bad font file format." };
errno.ENOSTR = { code: 60, message: "Device not a stream." };
errno.ENODATA = { code: 61, message: "No data available." };
errno.ETIME = { code: 62, message: "Timer expired." };
errno.ENOSR = { code: 63, message: "Out of streams resources." };
errno.ENONET = { code: 64, message: "Machine is not on the network." };
errno.ENOPKG = { code: 65, message: "Package not installed." };
errno.EREMOTE = { code: 66, message: "Object is remote." };
errno.ENOLINK = { code: 67, message: "Link has been severed." };
errno.EADV = { code: 68, message: "Advertise errno." };
errno.ESRMNT = { code: 69, message: "Srmount errno." };
errno.ECOMM = { code: 70, message: "Communication error on send." };
errno.EPROTO = { code: 71, message: "Protocol errno." };
errno.EMULTIHOP = { code: 72, message: "Multihop attempted." };
errno.EDOTDOT = { code: 73, message: "RFS specific errno." };
errno.EBADMSG = { code: 74, message: "Not a data message." };
errno.EOVERFLOW = { code: 75, message: "Value too large for defined data type." };
errno.ENOTUNIQ = { code: 76, message: "Name not unique on network." };
errno.EBADFD = { code: 77, message: "File descriptor in bad state." };
errno.EREMCHG = { code: 78, message: "Remote address changed." };
errno.ELIBACC = { code: 79, message: "Can not access a needed shared library." };
errno.ELIBBAD = { code: 80, message: "Accessing a corrupted shared library." };
errno.ELIBSCN = { code: 81, message: ".lib section in a.out corrupted." };
errno.ELIBMAX = { code: 82, message: "Attempting to link in too many shared libraries." };
errno.ELIBEXEC = { code: 83, message: "Cannot exec a shared library directly." };
errno.EILSEQ = { code: 84, message: "Illegal byte sequence." };
errno.ERESTART = { code: 85, message: "Interrupted system call should be restarted." };
errno.ESTRPIPE = { code: 86, message: "Streams pipe errno." };
errno.EUSERS = { code: 87, message: "Too many users." };
errno.ENOTSOCK = { code: 88, message: "Socket operation on non-socket." };
errno.EDESTADDRREQ = { code: 89, message: "Destination address required." };
errno.EMSGSIZE = { code: 90, message: "Message too long." };
errno.EPROTOTYPE = { code: 91, message: "Protocol wrong type for socket." };
errno.ENOPROTOOPT = { code: 92, message: "Protocol not available." };
errno.EPROTONOSUPPORT = { code: 93, message: "Protocol not supported." };
errno.ESOCKTNOSUPPORT = { code: 94, message: "Socket type not supported." };
errno.EOPNOTSUPP = { code: 95, message: "Operation not supported on transport endpoint." };
errno.EPFNOSUPPORT = { code: 96, message: "Protocol family not supported." };
errno.EAFNOSUPPORT = { code: 97, message: "Address family not supported by protocol." };
errno.EADDRINUSE = { code: 98, message: "Address already in use." };
errno.EADDRNOTAVAIL = { code: 99, message: "Cannot assign requested address." };
errno.ENETDOWN = { code: 100, message: "Network is down." };
errno.ENETUNREACH = { code: 101, message: "Network is unreachable." };
errno.ENETRESET = { code: 102, message: "Network dropped connection because of reset." };
errno.ECONNABORTED = { code: 103, message: "Software caused connection abort." };
errno.ECONNRESET = { code: 104, message: "Connection reset by peer." };
errno.ENOBUFS = { code: 105, message: "No buffer space available." };
errno.EISCONN = { code: 106, message: "Transport endpoint is already connected." };
errno.ENOTCONN = { code: 107, message: "Transport endpoint is not connected." };
errno.ESHUTDOWN = { code: 108, message: "Cannot send after transport endpoint shutdown." };
errno.ETOOMANYREFS = { code: 109, message: "Too many references: cannot splice." };
errno.ETIMEDOUT = { code: 110, message: "Connection timed out." };
errno.ECONNREFUSED = { code: 111, message: "Connection refused." };
errno.EHOSTDOWN = { code: 112, message: "Host is down." };
errno.EHOSTUNREACH = { code: 113, message: "No route to host." };
errno.EALREADY = { code: 114, message: "Operation already in progress." };
errno.EINPROGRESS = { code: 115, message: "Operation now in progress." };
errno.ESTALE = { code: 116, message: "Stale NFS file handle." };
errno.EUCLEAN = { code: 117, message: "Structure needs cleaning." };
errno.ENOTNAM = { code: 118, message: "Not a XENIX named type file." };
errno.ENAVAIL = { code: 119, message: "No XENIX semaphores available." };
errno.EISNAM = { code: 120, message: "Is a named type file." };
errno.EREMOTEIO = { code: 121, message: "Remote I/O errno." };
errno.EDQUOT = { code: 122, message: "Quota exceeded." };

errno.ENOMEDIUM = { code: 123, message: "No medium found." };
errno.EMEDIUMTYPE = { code: 124, message: "Wrong medium type." };
errno.ECANCELED = { code: 125, message: "Operation Canceled." };
errno.ENOKEY = { code: 126, message: "Required key not available." };
errno.EKEYEXPIRED = { code: 127, message: "Key has expired." };
errno.EKEYREVOKED = { code: 128, message: "Key has been revoked." };
errno.EKEYREJECTED = { code: 129, message: "Key was rejected by service." };

/* for robust mutexes */
errno.EOWNERDEAD = { code: 130, message: "Owner died." };
errno.ENOTRECOVERABLE = { code: 131, message: "State not recoverable." };

module.exports = errno;
